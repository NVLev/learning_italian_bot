services:

  pg:
    image: postgres:16
    environment:
      POSTGRES_DB: learning_language
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d learning_language" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  alembic:
    build: .
    depends_on:
      - pg
    networks:
      - app-network
    environment:
      DB__URL: "postgresql+asyncpg://user:password@pg:5432/learning_language"
    volumes:
      - ./migration:/app/migration
      - ./model:/app/model
      - ./alembic.ini:/app/alembic.ini
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Applying migrations...' &&
        alembic upgrade head &&
        echo 'Migrations completed!' &&
        tail -f /dev/null
      "
    profiles:
      - dev
      - migrate

  bot:
    build: .
    depends_on:
      pg:
        condition: service_healthy
    networks:
      - app-network
    environment:
      BOT__TOKEN: "${BOT__TOKEN}"
      BOT__ADMIN_IDS: "${BOT__ADMIN_IDS:-[]}"

      DB__URL: "postgresql+asyncpg://user:password@pg:5432/learning_language"
      DB__ECHO: "false"
      DB__POOL_SIZE: "10"
      DB__MAX_OVERFLOW: "20"

      OPENAI__API_KEY: "${OPENAI__API_KEY:-}"
      OPENAI__ENABLED: "${OPENAI__ENABLED:-false}"
    restart: unless-stopped
    volumes:
      - ./:/app

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: