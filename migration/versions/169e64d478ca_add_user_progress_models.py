"""Add user progress models

Revision ID: 169e64d478ca
Revises: 4fe1ddabd44e
Create Date: 2025-10-20 20:44:38.012318

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "169e64d478ca"
down_revision: Union[str, None] = "4fe1ddabd44e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("total_words_learned", sa.Integer(), nullable=False),
        sa.Column("total_correct_answers", sa.Integer(), nullable=False),
        sa.Column("total_wrong_answers", sa.Integer(), nullable=False),
        sa.Column("total_trainings", sa.Integer(), nullable=False),
        sa.Column("current_streak", sa.Integer(), nullable=False),
        sa.Column("longest_streak", sa.Integer(), nullable=False),
        sa.Column("last_activity_date", sa.DateTime(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("experience_points", sa.Integer(), nullable=False),
        sa.Column("notifications_enabled", sa.Boolean(), nullable=False),
        sa.Column("preferred_difficulty", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_telegram_id"), "users", ["telegram_id"], unique=True
    )
    op.create_table(
        "training_sessions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("session_type", sa.String(length=50), nullable=False),
        sa.Column("theme_id", sa.Integer(), nullable=True),
        sa.Column("total_questions", sa.Integer(), nullable=False),
        sa.Column("correct_answers", sa.Integer(), nullable=False),
        sa.Column("wrong_answers", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("duration_seconds", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["theme_id"],
            ["themes.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_training_sessions_user_id"),
        "training_sessions",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "user_word_progress",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("correct_count", sa.Integer(), nullable=False),
        sa.Column("wrong_count", sa.Integer(), nullable=False),
        sa.Column("repetitions", sa.Integer(), nullable=False),
        sa.Column("easiness_factor", sa.Float(), nullable=False),
        sa.Column("interval_days", sa.Integer(), nullable=False),
        sa.Column("next_review_date", sa.DateTime(), nullable=True),
        sa.Column("first_seen_at", sa.DateTime(), nullable=False),
        sa.Column("last_reviewed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["word_id"], ["vocabulary.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_word_progress_user_id"),
        "user_word_progress",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_word_progress_word_id"),
        "user_word_progress",
        ["word_id"],
        unique=False,
    )
    op.add_column(
        "vocabulary",
        sa.Column("difficulty", sa.String(length=20), nullable=True),
    )
    op.add_column(
        "vocabulary",
        sa.Column("usage_example", sa.String(length=500), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("vocabulary", "usage_example")
    op.drop_column("vocabulary", "difficulty")
    op.drop_index(
        op.f("ix_user_word_progress_word_id"), table_name="user_word_progress"
    )
    op.drop_index(
        op.f("ix_user_word_progress_user_id"), table_name="user_word_progress"
    )
    op.drop_table("user_word_progress")
    op.drop_index(
        op.f("ix_training_sessions_user_id"), table_name="training_sessions"
    )
    op.drop_table("training_sessions")
    op.drop_index(op.f("ix_users_telegram_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
