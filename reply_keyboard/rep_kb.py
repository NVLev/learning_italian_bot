from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from config_data.config import logger

from database.functions import get_all_themes
from config_data.config import DATABASE_URL, engine, async_session

def main_kb():
    kb_list = [
        [KeyboardButton(text="üìö –§—Ä–∞–∑–∞ –¥–Ω—è")],
        [KeyboardButton(text="üìñ –ò–∑—É—á–∞–µ–º —Å–ª–æ–≤–∞"), KeyboardButton(text="üìù –¢—Ä–µ–Ω–∏—Ä—É–µ–º —Å–ª–æ–≤–∞")],

    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
# KeyboardButton(text="üë§ –û —á—ë–º —ç—Ç–æ –≤—Å—ë")

async def theme_keyboard(session: async_session):  # Add the session argument
    """Builds a keyboard from the list of themes obtained in the get_all_themes function."""
    builder = ReplyKeyboardBuilder()
    async with async_session() as session:
        try:
            theme_list = await get_all_themes(session)
            for item in theme_list:
                builder.button(text=item.name)
        except Exception as e:
            logger.exception(f"Error getting themes: {e}")
            builder.button(text="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–º—ã")

        builder.button(text='–ù–∞–∑–∞–¥')
        builder.adjust(2, 4, 2, 2, 4)
        return builder.as_markup(resize_keyboard=True)

# def create_spec_kb():
#     kb_list = [
#         [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ", request_location=True)],
#         [KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
#         [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É/–æ–ø—Ä–æ—Å", request_poll=KeyboardButtonPollType())]
#     ]
#     keyboard = ReplyKeyboardMarkup(keyboard=kb_list,
#                                    resize_keyboard=True,
#                                    one_time_keyboard=True,
#                                    input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:")
#     return keyboard
